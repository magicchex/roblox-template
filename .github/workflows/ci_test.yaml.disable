name: continuous integration

on:
  push:
    branches: 
      - master
      - dev
      - dev/*
      - release/*
      - feature/*
    paths: src/**/*.luau
env:
  GIT_NO_REPLY_EMAIL: actions@github.com
  GIT_USERNAME: GitHub Actions
  REPOSITORY_NAME: ${{ github.repository }}
  SOURCE_FOLDER: src
  UNIVERSE_ID: ${{ vars.UNIVERSE_ID }}
  PLACE_ID: ${{ vars.PLACE_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PLACE_PUBLISHING_KEY: ${{ secrets.PLACE_PUBLISHING_KEY }}
jobs:
  deploy-place-to-roblox:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cargo
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
      
      # - name: Install Rokit and its tools via Python
      #   run: |
      #     chmod 555 ./install_rokit/rokit.py
      #     python ./install_rokit/rokit.py

      - name: Install Rokit
        run: cargo install rokit --locked

      - name: Configure Rokit to Path
        run: rokit self-install
        
      - name: Trust Rokit tools
        run: |
          chmod 555 ./install_rokit/rokit.sh
          ./install_rokit/rokit.sh

      - name: Install Rokit tools
        run: rokit install --no-trust-check
      
      - name: Stylua
        run: stylua $SOURCE_FOLDER

      - name: Commit any changes made by Stylua
        run: |
          if [[ $(git diff) != "" ]]; then
            git config --global user.name $GIT_USERNAME
            git config --global user.email $GIT_NO_REPLY_EMAIL
            git add .
            git commit -m "Apply code formatting"
            git push
            echo "Stylua made changes"
          else
            echo "No stylua changes"
          fi

      - name: Install Luau Libraries
        run: |
          if [ -f "wally.toml" ]; then
            wally install
          else
            echo "Skipped Wally."
          fi

      - name: Deploy Place to Roblox
        run: rojo upload --asset_id $PLACE_ID --universe_id $UNIVERSE_ID --api_key $PLACE_PUBLISHING_KEY
  deploy-documentation:
    permissions:
      contents: write
      pages: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4

      - name: Install Moonwave
        run: npm install --global moonwave

      - name: Moonwave Git Configuration
        run: |
          git config --global user.email $GIT_NO_REPLY_EMAIL
          git config --global user.name $GIT_USERNAME
          git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/$REPOSITORY_NAME.git

      - name: Deploy Documentation
        run: moonwave build --publish --code $SOURCE_FOLDER
